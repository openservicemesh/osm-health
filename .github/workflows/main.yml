name: Go
on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "scripts/cleanup/**"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "scripts/cleanup/**"

jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: ShellCheck
        run: shellcheck -x $(find . -name '*.sh')

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Go 1.16
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: go build deps
        run: make embed-files-test
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.30
          skip-pkg-cache: true
          args: --timeout 5m --skip-dirs pkg/gen --skip-files "zz_generated.deepcopy.go$"

  codegen:
    name: Codegen
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Go 1.16
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: go mod tidy
        run: make go-mod-tidy
      - name: Codegen checks
        run: make check-codegen

  build:
    name: Go build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Restore Module Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod2-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod2-
      - name: Restore Build Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-gobuild-${{ hashFiles('**/*.go') }}
      - name: Setup Go 1.16
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: Go Build
        run: make build-ci

  unittest:
    name: Go test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Restore Module Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod2-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod2-
      - name: Restore Build Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-gobuild-${{ hashFiles('**/*.go') }}
      - name: Setup Go 1.16
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: Test
        run: make go-test-coverage
      - name: Upload Coverage
        if: ${{ success() }}
        run: bash <(curl -s https://codecov.io/bash) -F unittests


  simulation:
    name: Simulation
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Restore Module Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod2-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod2-
      - name: Restore Build Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-gobuild-${{ hashFiles('**/*.go') }}

      - name: Setup Go 1.16
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: Test
        run: make go-test-coverage

      - name: Upload Coverage
        if: ${{ success() }}
        run: bash <(curl -s https://codecov.io/bash) -F unittests

      - name: Run Simulation w/ Tresor, SMI policies, and egress disabled
        run: |
          make kind-up
          ./tests/run-tests.sh
